// Test my-qris library directly
import myQrisPackage from "my-qris";

const { makeQRPayment, generateQRDataUrl } = myQrisPackage;

async function testMyQrisDirectly() {
  console.log('🧪 === TESTING MY-QRIS DIRECTLY ===\n');
  
  // Use a known valid QRIS string
  const validQRIS = "00020101021126710024ID.CO.MANDIRISYARIAH.WWW0118936004510000003986021000000039860303URE51440014ID.CO.QRIS.WWW0115936004510000003985204599953033605802ID5918MASJID JABAL ARAFAH6005BATAM62070703A01630471E8";
  
  console.log('📝 Using known valid QRIS:');
  console.log('🔤 QRIS:', validQRIS);
  console.log('📏 Length:', validQRIS.length);
  
  try {
    console.log('\n💳 Step 1: Creating payment QRIS...');
    
    const paymentQRIS = makeQRPayment({
      qrCode: validQRIS,
      amount: 50000,
      fee: 0,
      feeType: "fixed"
    });
    
    console.log('✅ Payment QRIS created successfully!');
    console.log('📝 Payment QRIS:', paymentQRIS);
    console.log('📏 Payment QRIS length:', paymentQRIS.length);
    
    console.log('\n🎨 Step 2: Generating QR code image...');
    
    const qrDataUrl = await generateQRDataUrl(paymentQRIS);
    
    console.log('✅ QR code image generated successfully!');
    console.log('📱 Data URL length:', qrDataUrl.length);
    console.log('🔗 Data URL preview:', qrDataUrl.substring(0, 100) + '...');
    
    console.log('\n🎉 ALL TESTS PASSED!');
    console.log('✅ my-qris library works correctly');
    console.log('✅ makeQRPayment function working');
    console.log('✅ generateQRDataUrl function working');
    
    return { success: true, paymentQRIS, qrDataUrl };
    
  } catch (error) {
    console.error('❌ Error:', error.message);
    console.error('🔍 Error details:', error);
    
    return { success: false, error: error.message };
  }
}

// Test dengan different amounts
async function testDifferentAmounts() {
  console.log('\n🧪 === TESTING DIFFERENT AMOUNTS ===\n');
  
  const validQRIS = "00020101021126710024ID.CO.MANDIRISYARIAH.WWW0118936004510000003986021000000039860303URE51440014ID.CO.QRIS.WWW0115936004510000003985204599953033605802ID5918MASJID JABAL ARAFAH6005BATAM62070703A01630471E8";
  
  const testCases = [
    { amount: 1000, fee: 0 },
    { amount: 50000, fee: 2500 },
    { amount: 100000, fee: 0 },
    { amount: 250000, fee: 5000 }
  ];
  
  for (let i = 0; i < testCases.length; i++) {
    const testCase = testCases[i];
    const totalAmount = testCase.amount + testCase.fee;
    
    console.log(`\n💰 Test Case ${i + 1}: Amount ${testCase.amount} + Fee ${testCase.fee} = Total ${totalAmount}`);
    
    try {
      const paymentQRIS = makeQRPayment({
        qrCode: validQRIS,
        amount: totalAmount,
        fee: 0,
        feeType: "fixed"
      });
      
      console.log('✅ Payment QRIS created successfully');
      console.log('📏 Length:', paymentQRIS.length);
      
      // Try to generate QR image
      const qrDataUrl = await generateQRDataUrl(paymentQRIS);
      console.log('📱 QR image generated successfully');
      
    } catch (error) {
      console.error('❌ Failed:', error.message);
    }
  }
}

async function main() {
  console.log('🚀 === MY-QRIS LIBRARY TESTING ===\n');
  
  const result1 = await testMyQrisDirectly();
  
  if (result1.success) {
    await testDifferentAmounts();
    
    console.log('\n🎯 === CONCLUSION ===');
    console.log('✅ my-qris library is working correctly');
    console.log('✅ The issue is not with library usage');
    console.log('✅ QR codes generated by my-qris should be scannable');
    console.log('❓ Issue might be in QR reading from uploaded image files');
  } else {
    console.log('\n❌ my-qris library has issues');
  }
}

main().catch(console.error);